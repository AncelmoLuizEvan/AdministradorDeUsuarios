// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpcCalc.Infra.Context;

#nullable disable

namespace RpcCalc.Infra.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20231219032113_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MotivosInativacao", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Perfis", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "510faed3-f562-417e-81ab-096eecf652da",
                            DataCriacao = new DateTime(2023, 12, 18, 23, 21, 13, 807, DateTimeKind.Local).AddTicks(4386),
                            Descricao = "Acesso para testar o sistema",
                            Nome = "Mensal"
                        },
                        new
                        {
                            Id = "0031a3a2-bda4-40c5-bbcd-1695f4a492be",
                            DataCriacao = new DateTime(2023, 12, 18, 23, 21, 13, 807, DateTimeKind.Local).AddTicks(4411),
                            Descricao = "Acesso por seis meses",
                            Nome = "Semestral"
                        },
                        new
                        {
                            Id = "4ce10ffc-9d18-4931-b990-e1092e575cd9",
                            DataCriacao = new DateTime(2023, 12, 18, 23, 21, 13, 807, DateTimeKind.Local).AddTicks(4412),
                            Descricao = "Acesso por um ano",
                            Nome = "Anual"
                        },
                        new
                        {
                            Id = "7b38c7e2-b500-4a0c-92c7-2533c953b2d9",
                            DataCriacao = new DateTime(2023, 12, 18, 23, 21, 13, 807, DateTimeKind.Local).AddTicks(4413),
                            Descricao = "Acesso vitalício",
                            Nome = "Vitalicio"
                        },
                        new
                        {
                            Id = "c9215eee-38e0-4a80-a437-e1625ed66679",
                            DataCriacao = new DateTime(2023, 12, 18, 23, 21, 13, 807, DateTimeKind.Local).AddTicks(4415),
                            Descricao = "Acesso para testar",
                            Nome = "Semana"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Acessar")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Permissoes", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7eb6ce60-4c2f-47a0-bfc8-3db36e0428c3",
                            DataCriacao = new DateTime(2023, 12, 18, 23, 21, 13, 807, DateTimeKind.Local).AddTicks(8609),
                            Descricao = "Administrador",
                            Nome = "Admin"
                        },
                        new
                        {
                            Id = "4cde49c8-13c4-4284-9861-e139722a1541",
                            DataCriacao = new DateTime(2023, 12, 18, 23, 21, 13, 807, DateTimeKind.Local).AddTicks(8619),
                            Descricao = "Cliente RpcCalc",
                            Nome = "Cliente"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraAcesso")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraInclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("EmailVerificado")
                        .HasColumnType("int");

                    b.Property<int?>("Inativo")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("PerfilId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PermissaoId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosPerfis", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioRoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosRoles", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("MotivoInativacaoEntities")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.PerfilEntity", "Perfil")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PerfilId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.PermissaoEntity", "Permissao")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PermissaoId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("UsuarioPerfis")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Permissao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioRoleEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.RoleEntity", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.RoleEntity", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Navigation("MotivoInativacaoEntities");

                    b.Navigation("Roles");

                    b.Navigation("UsuarioPerfis");
                });
#pragma warning restore 612, 618
        }
    }
}
