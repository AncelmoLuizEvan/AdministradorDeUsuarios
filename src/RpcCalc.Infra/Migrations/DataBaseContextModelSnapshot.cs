// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpcCalc.Infra.Context;

#nullable disable

namespace RpcCalc.Infra.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MotivosInativacao", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Perfis", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2796d73e-afd8-47a6-a72f-7db92bbc3fea",
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 961, DateTimeKind.Local).AddTicks(7062),
                            Descricao = "Acesso para testar o sistema",
                            Nome = "Mensal"
                        },
                        new
                        {
                            Id = "dcaf4669-cacb-41c5-9df5-1a868d1ba2e1",
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 961, DateTimeKind.Local).AddTicks(7120),
                            Descricao = "Acesso por seis meses",
                            Nome = "Semestral"
                        },
                        new
                        {
                            Id = "ea7f2f94-e55e-417c-b4a4-1f34a4d4a760",
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 961, DateTimeKind.Local).AddTicks(7121),
                            Descricao = "Acesso por um ano",
                            Nome = "Anual"
                        },
                        new
                        {
                            Id = "793dd8cd-3383-4e0a-81ca-dfe7b83b6479",
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 961, DateTimeKind.Local).AddTicks(7123),
                            Descricao = "Acesso vitalício",
                            Nome = "Vitalicio"
                        },
                        new
                        {
                            Id = "3768dfb8-d04b-42ae-80f5-c82851209773",
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 961, DateTimeKind.Local).AddTicks(7124),
                            Descricao = "Acesso para testar",
                            Nome = "Semana"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Acessar")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Permissoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5472a83d-711e-47bd-a253-d3836f14defa",
                            Acessar = 1,
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 962, DateTimeKind.Local).AddTicks(1344),
                            Sistema = "RPC Desktop"
                        },
                        new
                        {
                            Id = "dadd3806-ed07-4105-8f79-ac424f544bbb",
                            Acessar = 1,
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 962, DateTimeKind.Local).AddTicks(1352),
                            Sistema = "RPC Web Admin"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f1933391-0f38-49b4-895b-34e06e26591e",
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 962, DateTimeKind.Local).AddTicks(3388),
                            Descricao = "Administrador",
                            Nome = "Admin"
                        },
                        new
                        {
                            Id = "98b8bc25-67d6-46b7-92d4-084f5c2498f3",
                            DataCriacao = new DateTime(2024, 1, 30, 9, 45, 44, 962, DateTimeKind.Local).AddTicks(3395),
                            Descricao = "Cliente RpcCalc",
                            Nome = "Cliente"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraAcesso")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraInclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("EmailVerificado")
                        .HasColumnType("int");

                    b.Property<int?>("Inativo")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("PerfilId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PermissaoId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosPerfis", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioRoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosRoles", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("MotivoInativacaoEntities")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.PerfilEntity", "Perfil")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PerfilId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.PermissaoEntity", "Permissao")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PermissaoId");

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("UsuarioPerfis")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Permissao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioRoleEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.RoleEntity", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.RoleEntity", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Navigation("MotivoInativacaoEntities");

                    b.Navigation("Roles");

                    b.Navigation("UsuarioPerfis");
                });
#pragma warning restore 612, 618
        }
    }
}
