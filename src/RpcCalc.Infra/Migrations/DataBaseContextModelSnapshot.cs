// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpcCalc.Infra.Context;

#nullable disable

namespace RpcCalc.Infra.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MotivosInativacao", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Perfis", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ee8bb8a8-4ef3-4ac8-a78c-8ab657b81145",
                            DataCriacao = new DateTime(2023, 12, 15, 19, 40, 13, 548, DateTimeKind.Local).AddTicks(2313),
                            Descricao = "Acesso para testar o sistema",
                            Nome = "Mensal"
                        },
                        new
                        {
                            Id = "9c335fc5-1870-4074-995a-6d4fcb2746f8",
                            DataCriacao = new DateTime(2023, 12, 15, 19, 40, 13, 548, DateTimeKind.Local).AddTicks(2345),
                            Descricao = "Acesso por seis meses",
                            Nome = "Semestral"
                        },
                        new
                        {
                            Id = "9d67272c-5d27-4f84-b666-32e9f6cfb8e6",
                            DataCriacao = new DateTime(2023, 12, 15, 19, 40, 13, 548, DateTimeKind.Local).AddTicks(2346),
                            Descricao = "Acesso por um ano",
                            Nome = "Anual"
                        },
                        new
                        {
                            Id = "7947d5c0-fe71-43cf-896a-d4356caedffe",
                            DataCriacao = new DateTime(2023, 12, 15, 19, 40, 13, 548, DateTimeKind.Local).AddTicks(2348),
                            Descricao = "Acesso vitalício",
                            Nome = "Vitalicio"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Acessar")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Permissoes", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1c735ea5-2fdd-4ca7-abf5-05620a80f37f",
                            DataCriacao = new DateTime(2023, 12, 15, 19, 40, 13, 548, DateTimeKind.Local).AddTicks(6467),
                            Descricao = "Administrador",
                            Nome = "Admin"
                        },
                        new
                        {
                            Id = "5cc8f87b-0e5a-441e-9123-8368f92babd5",
                            DataCriacao = new DateTime(2023, 12, 15, 19, 40, 13, 548, DateTimeKind.Local).AddTicks(6477),
                            Descricao = "Cliente RpcCalc",
                            Nome = "Cliente"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraAcesso")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraInclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("EmailVerificado")
                        .HasColumnType("int");

                    b.Property<int?>("Inativo")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("PerfilId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PermissaoId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosPerfis", (string)null);
                });

            modelBuilder.Entity("UsuarioRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("RoleId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioRole");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("MotivoInativacaoEntities")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.PerfilEntity", "Perfil")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PerfilId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.PermissaoEntity", "Permissao")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PermissaoId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("UsuarioPerfis")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Permissao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UsuarioRole", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRole_RoleId");

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRole_UsuarioId");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Navigation("MotivoInativacaoEntities");

                    b.Navigation("UsuarioPerfis");
                });
#pragma warning restore 612, 618
        }
    }
}
