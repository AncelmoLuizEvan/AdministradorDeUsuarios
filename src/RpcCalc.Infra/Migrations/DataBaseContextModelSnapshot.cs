// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpcCalc.Infra.Context;

#nullable disable

namespace RpcCalc.Infra.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MotivosInativacao", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Perfis", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "21400ed9-544a-4938-b876-7863969fa8aa",
                            DataCriacao = new DateTime(2023, 12, 19, 9, 59, 56, 75, DateTimeKind.Local).AddTicks(2497),
                            Descricao = "Acesso para testar o sistema",
                            Nome = "Mensal"
                        },
                        new
                        {
                            Id = "3a03bf7e-5869-4e71-b608-ab72d3507e4b",
                            DataCriacao = new DateTime(2023, 12, 19, 9, 59, 56, 75, DateTimeKind.Local).AddTicks(2518),
                            Descricao = "Acesso por seis meses",
                            Nome = "Semestral"
                        },
                        new
                        {
                            Id = "a1a3ed14-6bcc-4d93-b870-81896ee6d20d",
                            DataCriacao = new DateTime(2023, 12, 19, 9, 59, 56, 75, DateTimeKind.Local).AddTicks(2519),
                            Descricao = "Acesso por um ano",
                            Nome = "Anual"
                        },
                        new
                        {
                            Id = "2aae6714-db78-48de-8f02-0b306d4e9183",
                            DataCriacao = new DateTime(2023, 12, 19, 9, 59, 56, 75, DateTimeKind.Local).AddTicks(2520),
                            Descricao = "Acesso vitalício",
                            Nome = "Vitalicio"
                        },
                        new
                        {
                            Id = "0077a601-6789-461c-90fb-638fc0a89c06",
                            DataCriacao = new DateTime(2023, 12, 19, 9, 59, 56, 75, DateTimeKind.Local).AddTicks(2521),
                            Descricao = "Acesso para testar",
                            Nome = "Semana"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Acessar")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Permissoes", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d119a0b0-2c19-4a34-83b8-511f3fc9a3df",
                            DataCriacao = new DateTime(2023, 12, 19, 9, 59, 56, 75, DateTimeKind.Local).AddTicks(6547),
                            Descricao = "Administrador",
                            Nome = "Admin"
                        },
                        new
                        {
                            Id = "3db764d7-bb91-4723-8c27-147eff07302d",
                            DataCriacao = new DateTime(2023, 12, 19, 9, 59, 56, 75, DateTimeKind.Local).AddTicks(6558),
                            Descricao = "Cliente RpcCalc",
                            Nome = "Cliente"
                        });
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraAcesso")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataHoraInclusao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("EmailVerificado")
                        .HasColumnType("int");

                    b.Property<int?>("Inativo")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("PerfilId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PermissaoId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosPerfis", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioRoleEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosRoles", (string)null);
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.MotivoInativacaoEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("MotivoInativacaoEntities")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioPerfilEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.PerfilEntity", "Perfil")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PerfilId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.PermissaoEntity", "Permissao")
                        .WithMany("UsuariosPerfis")
                        .HasForeignKey("PermissaoId");

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("UsuarioPerfis")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Permissao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioRoleEntity", b =>
                {
                    b.HasOne("RpcCalc.Domain.Entities.RoleEntity", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.HasOne("RpcCalc.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PerfilEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.PermissaoEntity", b =>
                {
                    b.Navigation("UsuariosPerfis");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.RoleEntity", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RpcCalc.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Navigation("MotivoInativacaoEntities");

                    b.Navigation("Roles");

                    b.Navigation("UsuarioPerfis");
                });
#pragma warning restore 612, 618
        }
    }
}
